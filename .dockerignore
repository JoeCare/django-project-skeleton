# experimental .dockerignore

# do NOT include the util directory
util

# do NOT include the provided deployment-related files
deploy
# but DO include the production-related scripts/config files that are used
# inside of the images
!deploy/Docker/bin/*
!deploy/Docker/django/entrypoint_django.sh
!deploy/Docker/django/gunicorn_conf.py
!deploy/Docker/django/run_gunicorn.sh
!deploy/Docker/nginx/nginx.conf
!deploy/Docker/nginx/entrypoint_nginx.sh

# do NOT include the documentation
# TODO: the original doc-folder of django-project-skeleton should be removed
#   during initialisation of the project. On the other hand, there could be
#   project specific documentation. However, this should be excluded from any
#   image.
docs

# inside of the images, only the compiled requirements files with the '.txt'
# extension are used. No need to include the source files.
requirements/*.in

# utility files/directories of the repository should not be included
**/.git
**/.tox
**/.dockerignore
**/.editorconfig
**/.gitignore
**/.travis.yml
**/Makefile
**/README*
**/tox.ini

# do not include any samples
**/*.sample

# do NOT track Python compilation stuff
*.py[cod]
**/__python__
**/__pycache__

# TODO: .gitignore excludes compiled language files. Is it safe to exclude the
#   uncompiled language files for 'production'?
